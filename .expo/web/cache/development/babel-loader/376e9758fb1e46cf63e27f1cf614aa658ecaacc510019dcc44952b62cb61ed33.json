{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _Buffer;\nif (typeof global !== 'undefined') {\n  global.Buffer = require('buffer').Buffer;\n}\nvar originalGetType = (_Buffer = global.Buffer) == null ? void 0 : _Buffer.isBuffer;\nif (originalGetType) {\n  global.Buffer.isBuffer = function (obj) {\n    return obj && obj._isBuffer;\n  };\n}\nif (typeof window !== 'undefined') {\n  window.Buffer = require('buffer').Buffer;\n  var originalBuffer = window.Buffer;\n  if (originalBuffer) {\n    window.Buffer.prototype._isBuffer = true;\n  }\n}\nif (typeof window !== 'undefined') {\n  var _navigator;\n  var originalMimeType = (_navigator = window.navigator) == null ? void 0 : _navigator.mimeTypes;\n  if (originalMimeType) {\n    window.navigator.mimeTypes = new Proxy(originalMimeType, {\n      get: function get(target, prop) {\n        if (prop === 'getType') {\n          return function () {\n            return 'application/octet-stream';\n          };\n        }\n        return target[prop];\n      }\n    });\n  }\n}\nif (typeof Buffer !== 'undefined') {\n  var OriginalBuffer = Buffer;\n  global.Buffer = function () {\n    var buffer = _construct(OriginalBuffer, _toConsumableArray(arguments));\n    buffer._isBuffer = true;\n    return buffer;\n  };\n  Object.setPrototypeOf(global.Buffer, OriginalBuffer);\n  Object.setPrototypeOf(global.Buffer.prototype, OriginalBuffer.prototype);\n  Object.getOwnPropertyNames(OriginalBuffer).forEach(function (name) {\n    if (name !== 'prototype' && name !== 'length' && name !== 'name') {\n      global.Buffer[name] = OriginalBuffer[name];\n    }\n  });\n}\nexport {};","map":{"version":3,"names":["global","Buffer","require","originalGetType","_Buffer","isBuffer","obj","_isBuffer","window","originalBuffer","prototype","_navigator","originalMimeType","navigator","mimeTypes","Proxy","get","target","prop","OriginalBuffer","buffer","_construct","_toConsumableArray","arguments","Object","setPrototypeOf","getOwnPropertyNames","forEach","name"],"sources":["/Users/sonson/Documents/code/venera/X150-Valkyrie/src/polyfills/mime-buffer-fix.ts"],"sourcesContent":["// MIME Buffer fix for Cardano serialization lib\n\n// Fix Buffer MIME type issues\nif (typeof global !== 'undefined') {\n    (global as any).Buffer = require('buffer').Buffer;\n}\n\n// Override MIME type detection\nconst originalGetType = (global as any).Buffer?.isBuffer;\nif (originalGetType) {\n    (global as any).Buffer.isBuffer = function (obj: any) {\n        return obj && obj._isBuffer;\n    };\n}\n\n// Fix for Cardano serialization lib Buffer issues\nif (typeof window !== 'undefined') {\n    (window as any).Buffer = require('buffer').Buffer;\n\n    // Override problematic MIME detection\n    const originalBuffer = (window as any).Buffer;\n    if (originalBuffer) {\n        (window as any).Buffer.prototype._isBuffer = true;\n    }\n}\n\n// Fix MIME type detection globally\nif (typeof window !== 'undefined') {\n    // Override MIME type detection\n    const originalMimeType = (window as any).navigator?.mimeTypes;\n    if (originalMimeType) {\n        (window as any).navigator.mimeTypes = new Proxy(originalMimeType, {\n            get: function (target, prop) {\n                if (prop === 'getType') {\n                    return function () {\n                        return 'application/octet-stream';\n                    };\n                }\n                return target[prop];\n            }\n        });\n    }\n}\n\n// Fix Buffer constructor\nif (typeof Buffer !== 'undefined') {\n    const OriginalBuffer = Buffer;\n    (global as any).Buffer = function () {\n        const buffer = new (OriginalBuffer as any)(...(arguments as any));\n        (buffer as any)._isBuffer = true;\n        return buffer;\n    };\n\n    // Copy static methods\n    Object.setPrototypeOf((global as any).Buffer, OriginalBuffer);\n    Object.setPrototypeOf((global as any).Buffer.prototype, OriginalBuffer.prototype);\n\n    // Copy static properties\n    Object.getOwnPropertyNames(OriginalBuffer).forEach(name => {\n        if (name !== 'prototype' && name !== 'length' && name !== 'name') {\n            (global as any).Buffer[name] = (OriginalBuffer as any)[name];\n        }\n    });\n}\n\nexport { };\n"],"mappings":";;;AAGA,IAAI,OAAOA,MAAM,KAAK,WAAW,EAAE;EAC9BA,MAAM,CAASC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,MAAM;AACrD;AAGA,IAAME,eAAe,IAAAC,OAAA,GAAIJ,MAAM,CAASC,MAAM,qBAAtBG,OAAA,CAAwBC,QAAQ;AACxD,IAAIF,eAAe,EAAE;EAChBH,MAAM,CAASC,MAAM,CAACI,QAAQ,GAAG,UAAUC,GAAQ,EAAE;IAClD,OAAOA,GAAG,IAAIA,GAAG,CAACC,SAAS;EAC/B,CAAC;AACL;AAGA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAC9BA,MAAM,CAASP,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,MAAM;EAGjD,IAAMQ,cAAc,GAAID,MAAM,CAASP,MAAM;EAC7C,IAAIQ,cAAc,EAAE;IACfD,MAAM,CAASP,MAAM,CAACS,SAAS,CAACH,SAAS,GAAG,IAAI;EACrD;AACJ;AAGA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAAA,IAAAG,UAAA;EAE/B,IAAMC,gBAAgB,IAAAD,UAAA,GAAIH,MAAM,CAASK,SAAS,qBAAzBF,UAAA,CAA2BG,SAAS;EAC7D,IAAIF,gBAAgB,EAAE;IACjBJ,MAAM,CAASK,SAAS,CAACC,SAAS,GAAG,IAAIC,KAAK,CAACH,gBAAgB,EAAE;MAC9DI,GAAG,EAAE,SAALA,GAAGA,CAAYC,MAAM,EAAEC,IAAI,EAAE;QACzB,IAAIA,IAAI,KAAK,SAAS,EAAE;UACpB,OAAO,YAAY;YACf,OAAO,0BAA0B;UACrC,CAAC;QACL;QACA,OAAOD,MAAM,CAACC,IAAI,CAAC;MACvB;IACJ,CAAC,CAAC;EACN;AACJ;AAGA,IAAI,OAAOjB,MAAM,KAAK,WAAW,EAAE;EAC/B,IAAMkB,cAAc,GAAGlB,MAAM;EAC5BD,MAAM,CAASC,MAAM,GAAG,YAAY;IACjC,IAAMmB,MAAM,GAAAC,UAAA,CAAQF,cAAc,EAAAG,kBAAA,CAAaC,SAAS,EAAS;IAChEH,MAAM,CAASb,SAAS,GAAG,IAAI;IAChC,OAAOa,MAAM;EACjB,CAAC;EAGDI,MAAM,CAACC,cAAc,CAAEzB,MAAM,CAASC,MAAM,EAAEkB,cAAc,CAAC;EAC7DK,MAAM,CAACC,cAAc,CAAEzB,MAAM,CAASC,MAAM,CAACS,SAAS,EAAES,cAAc,CAACT,SAAS,CAAC;EAGjFc,MAAM,CAACE,mBAAmB,CAACP,cAAc,CAAC,CAACQ,OAAO,CAAC,UAAAC,IAAI,EAAI;IACvD,IAAIA,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,MAAM,EAAE;MAC7D5B,MAAM,CAASC,MAAM,CAAC2B,IAAI,CAAC,GAAIT,cAAc,CAASS,IAAI,CAAC;IAChE;EACJ,CAAC,CAAC;AACN;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}