{"ast":null,"code":"if (typeof window !== 'undefined') {\n  var originalBuffer = window.Buffer;\n  if (originalBuffer) {\n    originalBuffer.isBuffer = function (obj) {\n      return obj && (obj._isBuffer || obj instanceof originalBuffer);\n    };\n    if (originalBuffer.prototype) {\n      originalBuffer.prototype._isBuffer = true;\n    }\n  }\n  if (window.navigator && window.navigator.mimeTypes) {\n    var mimeTypes = window.navigator.mimeTypes;\n    if (mimeTypes.getType) {\n      var originalGetType = mimeTypes.getType;\n      mimeTypes.getType = function (filename) {\n        try {\n          return originalGetType.call(this, filename) || 'application/octet-stream';\n        } catch (_unused) {\n          return 'application/octet-stream';\n        }\n      };\n    }\n  }\n}\nif (typeof global !== 'undefined') {\n  var globalBuffer = global.Buffer;\n  if (globalBuffer) {\n    globalBuffer.isBuffer = function (obj) {\n      return obj && (obj._isBuffer || obj instanceof globalBuffer);\n    };\n    if (globalBuffer.prototype) {\n      globalBuffer.prototype._isBuffer = true;\n    }\n  }\n}\nexport {};","map":{"version":3,"names":["window","originalBuffer","Buffer","isBuffer","obj","_isBuffer","prototype","navigator","mimeTypes","getType","originalGetType","filename","call","_unused","global","globalBuffer"],"sources":["/Users/sonson/Documents/code/venera/X150-Valkyrie/src/polyfills/cardano-web-fix.ts"],"sourcesContent":["// Cardano Web Fix for serialization lib\n\n// Fix for Cardano serialization lib Buffer issues\nif (typeof window !== 'undefined') {\n    // Override problematic Buffer methods\n    const originalBuffer = (window as any).Buffer;\n    if (originalBuffer) {\n        // Fix Buffer.isBuffer\n        originalBuffer.isBuffer = function (obj: any) {\n            return obj && (obj._isBuffer || obj instanceof originalBuffer);\n        };\n\n        // Fix Buffer prototype\n        if (originalBuffer.prototype) {\n            originalBuffer.prototype._isBuffer = true;\n        }\n    }\n\n    // Fix MIME type detection\n    if ((window as any).navigator && (window as any).navigator.mimeTypes) {\n        const mimeTypes = (window as any).navigator.mimeTypes;\n        if (mimeTypes.getType) {\n            const originalGetType = mimeTypes.getType;\n            mimeTypes.getType = function (filename: string) {\n                try {\n                    return originalGetType.call(this, filename) || 'application/octet-stream';\n                } catch {\n                    return 'application/octet-stream';\n                }\n            };\n        }\n    }\n}\n\n// Fix for global Buffer\nif (typeof global !== 'undefined') {\n    const globalBuffer = (global as any).Buffer;\n    if (globalBuffer) {\n        globalBuffer.isBuffer = function (obj: any) {\n            return obj && (obj._isBuffer || obj instanceof globalBuffer);\n        };\n\n        if (globalBuffer.prototype) {\n            globalBuffer.prototype._isBuffer = true;\n        }\n    }\n}\n\nexport { };\n"],"mappings":"AAGA,IAAI,OAAOA,MAAM,KAAK,WAAW,EAAE;EAE/B,IAAMC,cAAc,GAAID,MAAM,CAASE,MAAM;EAC7C,IAAID,cAAc,EAAE;IAEhBA,cAAc,CAACE,QAAQ,GAAG,UAAUC,GAAQ,EAAE;MAC1C,OAAOA,GAAG,KAAKA,GAAG,CAACC,SAAS,IAAID,GAAG,YAAYH,cAAc,CAAC;IAClE,CAAC;IAGD,IAAIA,cAAc,CAACK,SAAS,EAAE;MAC1BL,cAAc,CAACK,SAAS,CAACD,SAAS,GAAG,IAAI;IAC7C;EACJ;EAGA,IAAKL,MAAM,CAASO,SAAS,IAAKP,MAAM,CAASO,SAAS,CAACC,SAAS,EAAE;IAClE,IAAMA,SAAS,GAAIR,MAAM,CAASO,SAAS,CAACC,SAAS;IACrD,IAAIA,SAAS,CAACC,OAAO,EAAE;MACnB,IAAMC,eAAe,GAAGF,SAAS,CAACC,OAAO;MACzCD,SAAS,CAACC,OAAO,GAAG,UAAUE,QAAgB,EAAE;QAC5C,IAAI;UACA,OAAOD,eAAe,CAACE,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,IAAI,0BAA0B;QAC7E,CAAC,CAAC,OAAAE,OAAA,EAAM;UACJ,OAAO,0BAA0B;QACrC;MACJ,CAAC;IACL;EACJ;AACJ;AAGA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAC/B,IAAMC,YAAY,GAAID,MAAM,CAASZ,MAAM;EAC3C,IAAIa,YAAY,EAAE;IACdA,YAAY,CAACZ,QAAQ,GAAG,UAAUC,GAAQ,EAAE;MACxC,OAAOA,GAAG,KAAKA,GAAG,CAACC,SAAS,IAAID,GAAG,YAAYW,YAAY,CAAC;IAChE,CAAC;IAED,IAAIA,YAAY,CAACT,SAAS,EAAE;MACxBS,YAAY,CAACT,SAAS,CAACD,SAAS,GAAG,IAAI;IAC3C;EACJ;AACJ;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}