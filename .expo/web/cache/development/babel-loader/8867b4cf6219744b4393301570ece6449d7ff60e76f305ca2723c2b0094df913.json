{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { CYBERPUNK_COLORS } from \"../constants\";\nimport { CyberpunkButton } from \"./index\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar QRCodeScanner = function QRCodeScanner(_ref) {\n  var onScan = _ref.onScan,\n    onClose = _ref.onClose;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isScanning = _useState2[0],\n    setIsScanning = _useState2[1];\n  var handleScan = function handleScan() {\n    Alert.alert('QR Scanner', 'Feature coming soon. This will allow you to scan QR codes.', [{\n      text: 'OK'\n    }, {\n      text: 'Simulate Scan',\n      onPress: function onPress() {\n        return onScan('addr1qx2fxv2umyhttkxyxp8x0dlpdt3k6cwng5pxj3jhsydzer');\n      }\n    }]);\n  };\n  return _jsx(LinearGradient, {\n    colors: [CYBERPUNK_COLORS.background, '#1a1f3a'],\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"QR Code Scanner\"\n      }), _jsx(Text, {\n        style: styles.description,\n        children: \"Point your camera at a QR code to scan it\"\n      }), _jsxs(View, {\n        style: styles.scannerPlaceholder,\n        children: [_jsx(Text, {\n          style: styles.placeholderText,\n          children: \"\\uD83D\\uDCF1\"\n        }), _jsx(Text, {\n          style: styles.placeholderText,\n          children: \"Camera View\"\n        })]\n      }), _jsxs(View, {\n        style: styles.actions,\n        children: [_jsx(CyberpunkButton, {\n          title: \"Start Scanning\",\n          onPress: handleScan,\n          icon: \"\\uD83D\\uDD0D\",\n          size: \"large\"\n        }), _jsx(CyberpunkButton, {\n          title: \"Close\",\n          onPress: onClose,\n          variant: \"outline\",\n          icon: \"\\u2715\",\n          size: \"medium\"\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  content: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: CYBERPUNK_COLORS.primary,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  description: {\n    fontSize: 18,\n    color: CYBERPUNK_COLORS.textSecondary,\n    textAlign: 'center',\n    marginBottom: 30\n  },\n  scannerPlaceholder: {\n    width: 200,\n    height: 200,\n    borderRadius: 100,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  placeholderText: {\n    fontSize: 40,\n    color: CYBERPUNK_COLORS.textSecondary\n  },\n  actions: {\n    width: '100%',\n    gap: 15\n  }\n});\nexport default QRCodeScanner;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Alert","LinearGradient","CYBERPUNK_COLORS","CyberpunkButton","jsx","_jsx","jsxs","_jsxs","QRCodeScanner","_ref","onScan","onClose","_useState","_useState2","_slicedToArray","isScanning","setIsScanning","handleScan","alert","text","onPress","colors","background","style","styles","container","children","content","title","description","scannerPlaceholder","placeholderText","actions","icon","size","variant","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","color","primary","marginBottom","textAlign","textSecondary","width","height","borderRadius","backgroundColor","gap"],"sources":["/Users/sonson/Documents/code/venera/X150-Valkyrie/src/components/QRCodeScanner.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Alert,\n  Dimensions,\n} from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Haptics from 'expo-haptics';\n\nimport { CYBERPUNK_COLORS } from '@constants/index';\nimport { CyberpunkButton } from '@components/index';\n\n// Fallback QR scanner component\nconst QRCodeScanner: React.FC<{\n  onScan: (data: string) => void;\n  onClose: () => void;\n}> = ({ onScan, onClose }) => {\n  const [isScanning, setIsScanning] = useState(false);\n\n  const handleScan = () => {\n    Alert.alert(\n      'QR Scanner',\n      'Feature coming soon. This will allow you to scan QR codes.',\n      [\n        { text: 'OK' },\n        { text: 'Simulate Scan', onPress: () => onScan('addr1qx2fxv2umyhttkxyxp8x0dlpdt3k6cwng5pxj3jhsydzer') }\n      ]\n    );\n  };\n\n  return (\n    <LinearGradient\n      colors={[CYBERPUNK_COLORS.background, '#1a1f3a']}\n      style={styles.container}\n    >\n      <View style={styles.content}>\n        <Text style={styles.title}>QR Code Scanner</Text>\n        <Text style={styles.description}>\n          Point your camera at a QR code to scan it\n        </Text>\n        \n        <View style={styles.scannerPlaceholder}>\n          <Text style={styles.placeholderText}>📱</Text>\n          <Text style={styles.placeholderText}>Camera View</Text>\n        </View>\n        \n        <View style={styles.actions}>\n          <CyberpunkButton\n            title=\"Start Scanning\"\n            onPress={handleScan}\n            icon=\"🔍\"\n            size=\"large\"\n          />\n          \n          <CyberpunkButton\n            title=\"Close\"\n            onPress={onClose}\n            variant=\"outline\"\n            icon=\"✕\"\n            size=\"medium\"\n          />\n        </View>\n      </View>\n    </LinearGradient>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  content: {\n    padding: 20,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: CYBERPUNK_COLORS.primary,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  description: {\n    fontSize: 18,\n    color: CYBERPUNK_COLORS.textSecondary,\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n  scannerPlaceholder: {\n    width: 200,\n    height: 200,\n    borderRadius: 100,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 30,\n  },\n  placeholderText: {\n    fontSize: 40,\n    color: CYBERPUNK_COLORS.textSecondary,\n  },\n  actions: {\n    width: '100%',\n    gap: 15,\n  },\n});\n\nexport default QRCodeScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}