{"ast":null,"code":"export var TransactionStatus = function (TransactionStatus) {\n  TransactionStatus[\"PENDING\"] = \"pending\";\n  TransactionStatus[\"CONFIRMED\"] = \"confirmed\";\n  TransactionStatus[\"FAILED\"] = \"failed\";\n  TransactionStatus[\"OFFLINE_SIGNED\"] = \"offline_signed\";\n  TransactionStatus[\"QUEUED\"] = \"queued\";\n  return TransactionStatus;\n}({});","map":{"version":3,"names":["TransactionStatus"],"sources":["/Users/sonson/Documents/code/venera/X150-Valkyrie/src/types/wallet.ts"],"sourcesContent":["export interface WalletAccount {\n    id: string;\n    name: string;\n    address: string;\n    balance: string;\n    stakeAddress?: string;\n    isActive: boolean;\n    createdAt: Date;\n}\n\nexport interface Transaction {\n    id: string;\n    hash?: string;\n    amount: string;\n    fee: string;\n    from: string;\n    to: string;\n    status: TransactionStatus;\n    timestamp: Date;\n    metadata?: any;\n    isOffline?: boolean;\n    signedTx?: string; // Signed transaction data for offline transactions\n    errorDetails?: string; // Error details if transaction failed\n}\n\nexport enum TransactionStatus {\n    PENDING = 'pending',\n    CONFIRMED = 'confirmed',\n    FAILED = 'failed',\n    OFFLINE_SIGNED = 'offline_signed',\n    QUEUED = 'queued'\n}\n\nexport interface EncryptedMnemonic {\n    encryptedData: string;\n    salt: string;\n    iv: string;\n    fakeMnemonic: string;\n    algorithm: string;\n    iterations: number;\n    keySize: number;\n    timestamp: string;\n}\n\nexport interface WalletState {\n    isUnlocked: boolean;\n    currentAccount?: WalletAccount;\n    accounts: WalletAccount[];\n    transactions: Transaction[];\n    offlineQueue: Transaction[];\n    isOnline: boolean;\n}\n\nexport interface BiometricConfig {\n    enabled: boolean;\n    type: 'fingerprint' | 'face' | 'none';\n    quickPayEnabled: boolean;\n    quickPayLimit: string;\n}\n\nexport interface BluetoothTransaction {\n    id: string;\n    signedTx: string;\n    metadata: {\n        amount: string;\n        recipient: string;\n        timestamp: Date;\n    };\n}\n\nexport interface WalletConfig {\n    network: 'mainnet' | 'testnet';\n    biometric: BiometricConfig;\n    autoLock: number; // minutes\n    cyberpunkTheme: boolean;\n}\n"],"mappings":"AAyBA,WAAYA,iBAAiB,aAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}