{"ast":null,"code":"import _construct from \"@babel/runtime/helpers/construct\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nconsole.log('Loading MIME Buffer fix...');\ntry {\n  var _Buffer;\n  if (typeof global !== 'undefined') {\n    global.Buffer = require('buffer').Buffer;\n    console.log('Global Buffer polyfill applied');\n  }\n  var originalGetType = (_Buffer = global.Buffer) == null ? void 0 : _Buffer.isBuffer;\n  if (originalGetType) {\n    global.Buffer.isBuffer = function (obj) {\n      return obj && obj._isBuffer;\n    };\n    console.log('Buffer.isBuffer polyfill applied');\n  }\n  if (typeof window !== 'undefined') {\n    window.Buffer = require('buffer').Buffer;\n    var originalBuffer = window.Buffer;\n    if (originalBuffer) {\n      window.Buffer.prototype._isBuffer = true;\n      console.log('Window Buffer prototype polyfill applied');\n    }\n  }\n  if (typeof window !== 'undefined') {\n    var _navigator;\n    var originalMimeType = (_navigator = window.navigator) == null ? void 0 : _navigator.mimeTypes;\n    if (originalMimeType) {\n      window.navigator.mimeTypes = new Proxy(originalMimeType, {\n        get: function get(target, prop) {\n          if (prop === 'getType') {\n            return function () {\n              return 'application/octet-stream';\n            };\n          }\n          return target[prop];\n        }\n      });\n      console.log('MIME types polyfill applied');\n    }\n  }\n  if (typeof Buffer !== 'undefined') {\n    var OriginalBuffer = Buffer;\n    global.Buffer = function () {\n      var buffer = _construct(OriginalBuffer, _toConsumableArray(arguments));\n      buffer._isBuffer = true;\n      return buffer;\n    };\n    Object.setPrototypeOf(global.Buffer, OriginalBuffer);\n    Object.setPrototypeOf(global.Buffer.prototype, OriginalBuffer.prototype);\n    Object.getOwnPropertyNames(OriginalBuffer).forEach(function (name) {\n      if (name !== 'prototype' && name !== 'length' && name !== 'name') {\n        global.Buffer[name] = OriginalBuffer[name];\n      }\n    });\n    console.log('Buffer constructor polyfill applied');\n  }\n  if (typeof window !== 'undefined') {\n    var cardanoLib = window.cardano_serialization_lib;\n    if (cardanoLib) {\n      console.log('Cardano serialization lib found, applying fixes...');\n      if (cardanoLib.Buffer) {\n        cardanoLib.Buffer.isBuffer = function (obj) {\n          return obj && (obj._isBuffer || obj instanceof Buffer);\n        };\n      }\n    }\n  }\n  if (typeof window !== 'undefined') {\n    var originalConsoleError = console.error;\n    console.error = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var message = args.join(' ');\n      if (message.includes('Could not find MIME for Buffer')) {\n        console.warn('MIME Buffer error caught and suppressed:', message);\n        return;\n      }\n      originalConsoleError.apply(console, args);\n    };\n    console.log('Console error override applied');\n  }\n  console.log('MIME Buffer fix loaded successfully');\n} catch (error) {\n  console.warn('MIME Buffer fix failed to load:', error);\n}\nexport {};","map":{"version":3,"names":["console","log","_Buffer","global","Buffer","require","originalGetType","isBuffer","obj","_isBuffer","window","originalBuffer","prototype","_navigator","originalMimeType","navigator","mimeTypes","Proxy","get","target","prop","OriginalBuffer","buffer","_construct","_toConsumableArray","arguments","Object","setPrototypeOf","getOwnPropertyNames","forEach","name","cardanoLib","cardano_serialization_lib","originalConsoleError","error","_len","length","args","Array","_key","message","join","includes","warn","apply"],"sources":["/Users/sonson/Documents/code/venera/X150-Valkyrie/src/polyfills/mime-buffer-fix.ts"],"sourcesContent":["// MIME Buffer fix for Cardano serialization lib\n\nconsole.log('Loading MIME Buffer fix...');\n\ntry {\n    // Fix Buffer MIME type issues\n    if (typeof global !== 'undefined') {\n        (global as any).Buffer = require('buffer').Buffer;\n        console.log('Global Buffer polyfill applied');\n    }\n\n    // Override MIME type detection\n    const originalGetType = (global as any).Buffer?.isBuffer;\n    if (originalGetType) {\n        (global as any).Buffer.isBuffer = function (obj: any) {\n            return obj && obj._isBuffer;\n        };\n        console.log('Buffer.isBuffer polyfill applied');\n    }\n\n    // Fix for Cardano serialization lib Buffer issues\n    if (typeof window !== 'undefined') {\n        (window as any).Buffer = require('buffer').Buffer;\n\n        // Override problematic MIME detection\n        const originalBuffer = (window as any).Buffer;\n        if (originalBuffer) {\n            (window as any).Buffer.prototype._isBuffer = true;\n            console.log('Window Buffer prototype polyfill applied');\n        }\n    }\n\n    // Fix MIME type detection globally\n    if (typeof window !== 'undefined') {\n        // Override MIME type detection\n        const originalMimeType = (window as any).navigator?.mimeTypes;\n        if (originalMimeType) {\n            (window as any).navigator.mimeTypes = new Proxy(originalMimeType, {\n                get: function (target, prop) {\n                    if (prop === 'getType') {\n                        return function () {\n                            return 'application/octet-stream';\n                        };\n                    }\n                    return target[prop];\n                }\n            });\n            console.log('MIME types polyfill applied');\n        }\n    }\n\n    // Fix Buffer constructor\n    if (typeof Buffer !== 'undefined') {\n        const OriginalBuffer = Buffer;\n        (global as any).Buffer = function () {\n            const buffer = new (OriginalBuffer as any)(...(arguments as any));\n            (buffer as any)._isBuffer = true;\n            return buffer;\n        };\n\n        // Copy static methods\n        Object.setPrototypeOf((global as any).Buffer, OriginalBuffer);\n        Object.setPrototypeOf((global as any).Buffer.prototype, OriginalBuffer.prototype);\n\n        // Copy static properties\n        Object.getOwnPropertyNames(OriginalBuffer).forEach(name => {\n            if (name !== 'prototype' && name !== 'length' && name !== 'name') {\n                (global as any).Buffer[name] = (OriginalBuffer as any)[name];\n            }\n        });\n        console.log('Buffer constructor polyfill applied');\n    }\n\n    // Fix for Cardano serialization lib specifically\n    if (typeof window !== 'undefined') {\n        // Override problematic methods\n        const cardanoLib = (window as any).cardano_serialization_lib;\n        if (cardanoLib) {\n            console.log('Cardano serialization lib found, applying fixes...');\n\n            // Fix Buffer methods used by Cardano lib\n            if (cardanoLib.Buffer) {\n                cardanoLib.Buffer.isBuffer = function (obj: any) {\n                    return obj && (obj._isBuffer || obj instanceof Buffer);\n                };\n            }\n        }\n    }\n\n    // Fix for MIME Buffer error specifically\n    if (typeof window !== 'undefined') {\n        // Override console.error to catch MIME Buffer errors\n        const originalConsoleError = console.error;\n        console.error = function (...args: any[]) {\n            const message = args.join(' ');\n            if (message.includes('Could not find MIME for Buffer')) {\n                console.warn('MIME Buffer error caught and suppressed:', message);\n                return;\n            }\n            originalConsoleError.apply(console, args);\n        };\n        console.log('Console error override applied');\n    }\n\n    console.log('MIME Buffer fix loaded successfully');\n} catch (error) {\n    console.warn('MIME Buffer fix failed to load:', error);\n    // Continue anyway\n}\n\nexport { };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}