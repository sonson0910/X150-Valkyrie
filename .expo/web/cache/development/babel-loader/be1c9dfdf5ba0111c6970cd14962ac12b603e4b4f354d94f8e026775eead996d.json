{"ast":null,"code":"console.log('Loading web polyfills...');\nif (typeof global === 'undefined') {\n  window.global = window;\n  console.log('Global polyfill applied');\n}\nif (typeof Buffer === 'undefined') {\n  window.Buffer = require('buffer').Buffer;\n  console.log('Buffer polyfill applied');\n}\nif (typeof process === 'undefined') {\n  window.process = require('process/browser');\n  console.log('Process polyfill applied');\n}\nif (typeof crypto === 'undefined') {\n  window.crypto = require('crypto-browserify');\n  console.log('Crypto polyfill applied');\n}\nif (typeof window.stream === 'undefined') {\n  window.stream = require('stream-browserify');\n  console.log('Stream polyfill applied');\n}\nif (typeof window.util === 'undefined') {\n  window.util = require('util');\n  console.log('Util polyfill applied');\n}\nif (typeof WebAssembly === 'undefined') {\n  console.warn('WebAssembly not supported');\n} else {\n  console.log('WebAssembly supported');\n}\nconsole.log('Web polyfills loaded successfully');\nexport {};","map":{"version":3,"names":["console","log","global","window","Buffer","require","process","crypto","stream","util","WebAssembly","warn"],"sources":["/Users/sonson/Documents/code/venera/X150-Valkyrie/src/polyfills/web-polyfills.ts"],"sourcesContent":["// Web polyfills for Cardano wallet compatibility\n\nconsole.log('Loading web polyfills...');\n\n// Buffer polyfill\nif (typeof global === 'undefined') {\n  (window as any).global = window;\n  console.log('Global polyfill applied');\n}\n\nif (typeof Buffer === 'undefined') {\n  (window as any).Buffer = require('buffer').Buffer;\n  console.log('Buffer polyfill applied');\n}\n\n// MIME type polyfill\nif (typeof process === 'undefined') {\n  (window as any).process = require('process/browser');\n  console.log('Process polyfill applied');\n}\n\n// Crypto polyfill\nif (typeof crypto === 'undefined') {\n  (window as any).crypto = require('crypto-browserify');\n  console.log('Crypto polyfill applied');\n}\n\n// Stream polyfill\nif (typeof (window as any).stream === 'undefined') {\n  (window as any).stream = require('stream-browserify');\n  console.log('Stream polyfill applied');\n}\n\n// Util polyfill\nif (typeof (window as any).util === 'undefined') {\n  (window as any).util = require('util');\n  console.log('Util polyfill applied');\n}\n\n// Fix for Cardano serialization lib\nif (typeof WebAssembly === 'undefined') {\n  console.warn('WebAssembly not supported');\n} else {\n  console.log('WebAssembly supported');\n}\n\nconsole.log('Web polyfills loaded successfully');\n\n// Export for use in other files\nexport {};\n"],"mappings":"AAEAA,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AAGvC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAChCC,MAAM,CAASD,MAAM,GAAGC,MAAM;EAC/BH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;AACxC;AAEA,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAE;EAChCD,MAAM,CAASC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,MAAM;EACjDJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;AACxC;AAGA,IAAI,OAAOK,OAAO,KAAK,WAAW,EAAE;EACjCH,MAAM,CAASG,OAAO,GAAGD,OAAO,CAAC,iBAAiB,CAAC;EACpDL,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AACzC;AAGA,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE;EAChCJ,MAAM,CAASI,MAAM,GAAGF,OAAO,CAAC,mBAAmB,CAAC;EACrDL,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;AACxC;AAGA,IAAI,OAAQE,MAAM,CAASK,MAAM,KAAK,WAAW,EAAE;EAChDL,MAAM,CAASK,MAAM,GAAGH,OAAO,CAAC,mBAAmB,CAAC;EACrDL,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;AACxC;AAGA,IAAI,OAAQE,MAAM,CAASM,IAAI,KAAK,WAAW,EAAE;EAC9CN,MAAM,CAASM,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;EACtCL,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;AACtC;AAGA,IAAI,OAAOS,WAAW,KAAK,WAAW,EAAE;EACtCV,OAAO,CAACW,IAAI,CAAC,2BAA2B,CAAC;AAC3C,CAAC,MAAM;EACLX,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;AACtC;AAEAD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;AAGhD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}